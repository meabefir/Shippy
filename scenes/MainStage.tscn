[gd_scene load_steps=10 format=2]

[ext_resource path="res://scenes/Path.gd" type="Script" id=1]
[ext_resource path="res://scenes/MainStage.gd" type="Script" id=2]
[ext_resource path="res://textures/water.jpg" type="Texture" id=3]
[ext_resource path="res://scenes/WaterMesh.gd" type="Script" id=4]
[ext_resource path="res://scenes/gameplay/Boat.tscn" type="PackedScene" id=5]

[sub_resource type="Curve3D" id=1]
_data = {
"points": PoolVector3Array( 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0, 3, 0, -5, 0, 0, 0, 0, 0, 0, 5, 0, -3, 0, 0, 0, 0, 0, 0, 5, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, -2, 0, 2, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, -1, 0, 0, 0, 0, 0, 0, -5, -1, -5, 0, 0, 0, 0, 0, 0, 0, 0, -5 ),
"tilts": PoolRealArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
}

[sub_resource type="SpatialMaterial" id=2]
albedo_texture = ExtResource( 3 )
uv1_triplanar = true

[sub_resource type="Shader" id=3]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.2.stable's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}


vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}


void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	float avg = (albedo_tex.x + albedo_tex.y + albedo_tex.z) / 3.f;
	ALBEDO = albedo.rgb * albedo_tex.rgb;
//	ALBEDO = albedo.rgb * avg;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_blend_sharpness = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 3 )

[node name="MainStage" type="Spatial"]
script = ExtResource( 2 )

[node name="Path" type="Path" parent="."]
curve = SubResource( 1 )
script = ExtResource( 1 )

[node name="WaterMesh" type="CSGPolygon" parent="Path"]
transform = Transform( 51, 0, 0, 0, 51, 0, 0, 0, 51, 0, 0, 0 )
use_collision = true
polygon = PoolVector2Array( 0, 0, -1, 0, 1, 0, 1, 0 )
mode = 2
path_node = NodePath("..")
path_interval_type = 0
path_interval = 1.0
path_simplify_angle = 0.0
path_rotation = 2
path_local = false
path_continuous_u = true
path_u_distance = 1.0
path_joined = false
material = SubResource( 2 )
script = ExtResource( 4 )

[node name="WaterMesh2" type="CSGPolygon" parent="Path"]
transform = Transform( 51, 0, 0, 0, 51, 0, 0, 0, 51, 0, 0, 0 )
visible = false
use_collision = true
polygon = PoolVector2Array( 0, 0, -1, 0, 1, 0, 1, 0 )
mode = 2
path_node = NodePath("..")
path_interval_type = 0
path_interval = 1.0
path_simplify_angle = 0.0
path_rotation = 2
path_local = false
path_continuous_u = true
path_u_distance = 1.0
path_joined = false
material = SubResource( 4 )

[node name="PathSpawnLocation" type="PathFollow" parent="Path"]
unique_name_in_owner = true
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -5 )

[node name="boat" parent="." instance=ExtResource( 5 )]

[node name="projectiles" type="Spatial" parent="." groups=["projectiles"]]
